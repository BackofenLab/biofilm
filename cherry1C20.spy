
import sys
from glob import glob
what =  sys.argv[1]
dataset =  sys.argv[2]

'''
this is a copy of 1c20 to see if we can quickly run it
and share the model files...
'''
`export PYTHONHASHSEED=31337


fnames = [
    'splash_human_RRI_',
    'paris_human_RRI_',
    'full_',
    'full_human_',
    'paris_human_RBPs_',
    'paris_splash_human_RRI_',
    'paris_mouse_RRI_']



if dataset == 'all':
    for target in fnames:
        `shellpy cherry1C20.spy {what} {target}
    exit()


# ok lets make some DATA
if what == 'makedata':
    print(f'makedata {dataset}')
    `mkdir -p testb85/data/`
    # TODO change imoprt blabla to biofilm.examples.cherriload
    import examples.cherriload  as cl
    p = "~/data/cherry/"+dataset
    d1 = p+'neg.csv'
    d2 = p+"pos.csv"
    cl.convert(d1,d2,f'testb85/data/{dataset}', graphfeatures=True)

'''
1. load data
we can do it in a fancy way, by providing a python file that has a
read(path) function. as demonstrated in examples/cherriload.py
'''
loaddata = f'--infile testb85/data/{dataset}'



if what == 'selectft':
    `mkdir -p testb85/features`
    loaddata += ' --subsample 20000 '
    out = f'testb85/features/{dataset}'
    `python -m biofilm.biofilm-features {loaddata} --method forest --out {out}


'''
2. LETZ OPTYIMIZE
'''
if what == 'optimize':
    `mkdir -p testb85/optimized`
    loaddata += f' --folds 0 --featurefile testb85/features/{dataset}'
    # TODO python -m biofilm.biofilm-optimize6 should work
    #python biofilm/biofilm-optimize6.py  @(loaddata)\
    out  = f'testb85/optimized/{dataset}'
    z = `python -m biofilm.biofilm-optimize6 {loaddata} --out {out}  --preprocess True \
            --methods  extra_trees passive_aggressive random_forest sgd gradient_boosting mlp\
            --n_jobs 30 --time 50000
    print(z)




'''
4. plot performance (so far)
'''
if what == 'plot1':
    for f in glob(f'testb71/optimized/*.csv'):
        `python biofilm/biofilm-out.py --infiles  {f}`

'''
5. do crossval for all models
      use all 5 models to crossvalidate over all instances to compare them...
'''


if what == 'runcv':
    loaddata += f'--foldselect {{1}} --featurefile testb85/features/{dataset}'
    `mkdir -p testb85/crossval`
    seq = `seq 0 4`
    `parallel -j 5 --joblog delme.log $(which python) -m biofilm/biofilm-cv {loaddata} --model testb85/optimized/{dataset}.model --out testb81/crossval/{dataset}_{{1}}.cv ::: $(seq 0 4)`



if what == "refit":
    `mkdir -p testb85/refit
    loaddata += f' --featurefile testb85/features/{dataset}'
    models = 'testb85/optimized/%s.model' % dataset
    out = 'testb85/refit/%s.model' % dataset
    `python -m biofilm.biofilm-cv --folds 0 {loaddata} --model {models} --out {out}


if what == "crossmodel":
    '''
    1.    load the {dataset}
    2.    run the model against it
    '''
    `mkdir -p testb85/crossmodel
    for model in fnames:
        loaddata_mod = loaddata+f'--featurefile testb85/features/{model}'.split()
        print(loaddata_mod)
        if model != dataset:
            inmodel = "testb85/refit/%s.model.model" % model
            out = 'testb85/crossmodel/%s%s' % (model,dataset)
            `python biofilm/util/out.py --folds 0 {loaddata_mod} --model {inmodel} --out {out}

if what == "tspecial":
    '''
        use humanrri to predict on humanrbp
    '''
    `mkdir -p testb81/crossmodel
    model = 'paris_human_RRI_'
    inmodel = f"testb81/refit/{model}.model.model"
    targetdata = "paris_human_RBPs_"
    loaddata_mod = f'--infile testb81/data/paris_human_RBPs_ --featurefile testb81/features/{model}'
    out = 'testb81/crossmodel/%s%s' % (model,targetdata)
    print("FORK")
    print(f"python biofilm/util/out.py --folds 0 {loaddata_mod} --model {inmodel} --out {out}")

